name: $(Year:yy).$(DayOfYear).$(Rev:r)

parameters:
- name: acr_name 
  type: string 
  default: meetuppipelines
- name: image_name 
  type: string 
  default: meetup-pipelines
- name: image_tag 
  type: string 
  default: $(Build.BuildNumber)
- name: docker_version
  type: string
  default: "20.10.12"
- name: dockerfile_path
  type: string
  default: "./AzurePipelines/Dockerfile"
- name: build_args
  type: object
  default: []

variables:
  - group: environment-settings-meetup-stg


stages:
  - stage: Build_image
    jobs: 
    - job: 
      pool: your_pool_name
      displayName: build image
      steps:
      - task: DockerInstaller@0
        displayName: Docker Installer
        inputs:
          dockerVersion: ${{ parameters.docker_version }}
          releaseType: stable
      - script: |      
          docker login ${{ parameters.acr_name }}.azurecr.io -u $(client_id) -p $(client_secret)
        displayName: Login ACR
      - script: | 
          docker build -f ${{ parameters.dockerfile_path }}  -t ${{ parameters.acr_name }}.azurecr.io/${{ parameters.image_name }}:${{ parameters.image_tag }}  .
        displayName: Docker build
      - script: |
          docker push ${{ parameters.acr_name }}.azurecr.io/${{ parameters.image_name }}:latest
        displayName: Push to ACR
      - script: |
          docker image prune -f
        displayName: Clear images
     
  
  - stage: deploy_app 
    dependsOn: build_app 
    jobs: 
    - deployment: deploy_app 
      displayName: deploy_app 
      variables:
      - group: environment-settings-meetup-stg
      environment: meetup-stg
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              displayName: Download artifats from build
              inputs:
                buildType: 'current'
                artifactName: 'app'
                targetPath: '$(Build.ArtifactStagingDirectory)'
            - script: |
                az login --service-principal -u $(client_id) -p=$(client_secret) --tenant $(tenant_id)
                az account set --subscription $(subscription_id)
              displayName: az login
            - script: | 
                az webapp deployment source config-zip -g ${{ parameters.resource_group }} -n ${{ parameters.name_webapp}} --src app.zip
              displayName: deploy app 
              workingDirectory: $(Build.ArtifactStagingDirectory)



      
        